<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	 xmlns:ss="http://www.springframework.org/schema/security"
	 xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
   	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
   	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd
   	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
   	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
   	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
   	<!-- 使用CGLIB自动创建代理Bean -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
 
	<!-- DAL客户端接口实现 -->
	<bean id="dalClient" class="com.suning.framework.dal.client.support.DefaultDalClient">
		<!-- 数据源路由配置 -->
		<!-- <property name="rules">
			<map>
				<entry key="route.userId &gt; 0 &amp;&amp; route.userId &lt; 50"
					value-ref="dataSourceForOrderOne" />
				<entry key="route.userId>=50 &amp;&amp; route.userId<100"
					value-ref="dataSourceForOrderTwo" />
			</map>
		</property> -->
		<!-- SQL的Xml配置路径 -->
		<property name="resources" value="classpath*:conf/sqlMap/*/sqlMap_*.xml" />
		<!-- 定义默义的数据源 -->
		<property name="defaultDataSource" ref="dataSource" />
	</bean>

	<!-- 定义事务管理拦截器 -->
	<bean id="transactionInterceptor"
		class="com.suning.framework.dal.transaction.advisor.TransactionInterceptor">
		<!-- 注入DAL客户端接口 -->
		<property name="dalClient" ref="dalClient" />
	</bean>

	<!-- 定义bean自动代理容器 -->
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<list>
				<!-- 配置拦截器 -->
				<value>transactionInterceptor</value>
			</list>
		</property>
		<property name="beanNames">
			<list>
				<!-- 需要拦截serivce的beanName,支持通配 -->
				<value>*Service</value>
				<value>*ServiceImpl</value>
			</list>
		</property>
		<!-- 根据Target类型动态使用代理技术(proxy与cglib) -->
		<property name="proxyTargetClass" value="true" />
		<!-- 暴露代理对象，可以使用AopContext -->
		<property name="exposeProxy" value="true" />
	</bean>
<!-- 	<bean id="sequenceResource" -->
<!-- 		class="com.suning.vgs.im.sp.util.SequenceResourceImpl"> -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!--   		<property name="sequenceNextSql" value="SELECT next{seqName}()"/> -->
<!-- 	</bean> -->
	
   <bean id="idGenarater"
        class="org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer">
        <property name="incrementerName" value="seq_pos_id"/> 
        <property name="columnName" value="sequence_id"/>
        <property name="cacheSize" value="10"/> 
        <property name="dataSource" ref="dataSource"/>
   </bean>
   	
	<context:annotation-config />
</beans>
